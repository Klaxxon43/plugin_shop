from aiogram import Bot, types, F, Router
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

import configparser
from database.create import DataBase
from utils.db_init import db
from utils.imports import _
from utils.imports import *

from .menu import router

@router.message(CommandStart())
async def cmd_start(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    username = message.from_user.username
    lang_code = message.from_user.language_code or "ru"  # Telegram –º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å None

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
    ref_id = None
    if len(message.text.split()) > 1:
        ref_id = message.text.split()[1]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–µ—Ñ–µ—Ä–µ—Ä —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —ç—Ç–æ –Ω–µ —Å–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        if str(ref_id) == str(user_id):
            ref_id = None
        else:
            ref_user = await db.users.get_user(int(ref_id))
            if not ref_user:
                ref_id = None

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not await db.users.get_user(user_id):
        await db.users.add_user(user_id, username, ref_id, language=lang_code)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–µ—Ä—É
        if ref_id:
            try:
                await message.bot.send_message(
                    ref_id,
                    _("üéâ –£ –≤–∞—Å –Ω–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ.").format(
                        username=username if username else "–±–µ–∑ username"
                    )
                )
            except:
                pass  # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –∫–∞–Ω–∞–ª—ã (—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    if not await db.users.check_subs(user_id, message.bot):
        await show_op_channels(message, message.bot)
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    await show_main_menu(message, user_id)

async def show_op_channels(message: Message, bot: Bot):
    op_channels = await db.op.get_op_channels()
    valid_channels = []
    kb = InlineKeyboardBuilder()
    
    for channel in op_channels:
        try:
            channel_id = channel['channel_id']
            print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–Ω–∞–ª–∞: {channel_id}")
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ
            chat = await bot.get_chat(channel_id)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–æ—Ç —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
            bot_member = await bot.get_chat_member(chat.id, bot.id)
            if bot_member.status not in ['administrator', 'creator']:
                print(f"–ë–æ—Ç –Ω–µ –∞–¥–º–∏–Ω –≤ –∫–∞–Ω–∞–ª–µ {channel_id}")
                continue
                
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞ (–º–∏–Ω–∏–º—É–º - –ø—Ä–æ—Å–º–æ—Ç—Ä —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)
            if not bot_member.can_restrict_members and not bot_member.can_promote_members:
                print(f"–£ –±–æ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –≤ –∫–∞–Ω–∞–ª–µ {channel_id}")
                continue
                
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∫–∞–Ω–∞–ª–∞
            if chat.username:
                url = f"https://t.me/{chat.username}"
            else:
                try:
                    invite = await chat.export_invite_link()
                    url = invite
                except:
                    print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –∫–∞–Ω–∞–ª–∞ {channel_id}")
                    continue
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤–∞–ª–∏–¥–Ω—ã–π –∫–∞–Ω–∞–ª
            valid_channels.append(chat)
            kb.add(InlineKeyboardButton(
                text=_("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ {channel}").format(channel=chat.title),
                url=url
            ))
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–∞–Ω–∞–ª–∞ {channel.get('channel_id', 'unknown')}: {str(e)}")
            continue
    
    if not valid_channels:
        await message.answer(_("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."))
        return
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
    kb.add(InlineKeyboardButton(
        text=_("‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è"),
        callback_data="back_menu"
    ))
    kb.adjust(1)
    
    await message.answer(
        _("üì¢ <b>–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã:</b>"),
        reply_markup=kb.as_markup()
    )

async def show_main_menu(message: types.Message, user_id: int):
    is_admin = user_id in admins_list
    
    text = _("<b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>")
    
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(text=_("üß© –ü–ª–∞–≥–∏–Ω—ã"), callback_data="plugins"))
    kb.add(InlineKeyboardButton(text=_("üé© –ü—Ä–æ—Ñ–∏–ª—å"), callback_data="profile"))
    kb.add(InlineKeyboardButton(text=_("üë• –†–µ—Ñ —Å–∏—Å—Ç–µ–º–∞"), callback_data="ref_system"))
    kb.add(InlineKeyboardButton(text=_("‚ÑπÔ∏è –û –Ω–∞—Å"), callback_data="about"))
    
    if is_admin:
        kb.add(InlineKeyboardButton(text=_("üõ† –ê–î–ú–ò–ù–ö–ê"), callback_data="admin_panel"))

    kb.adjust(2, 1, 1, 1)

    await message.answer(text, reply_markup=kb.as_markup())